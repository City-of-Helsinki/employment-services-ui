{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/juhaylonen/futurice/myHelsinki/tyollisyys/react2/src/Paragraphs.js\",\n    _s = $RefreshSig$();\n\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Link from \"@material-ui/core/Link\";\nimport Accord from \"./Accord\";\nimport Subheading from \"./Subheading\";\nimport Info from \"./Info\";\nimport Pdf from \"./Pdf\";\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  toolbarTitle: {\n    flex: 1\n  },\n  toolbarSecondary: {\n    justifyContent: 'space-between',\n    overflowX: 'auto'\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0\n  }\n}));\n\nfunction Paragraphs(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    paragraphs\n  } = props;\n  console.log(paragraphs);\n  const items = [];\n  paragraphs.map((paragraph, index) => {\n    switch (paragraph.type) {\n      case 'Accordion':\n        items.push( /*#__PURE__*/_jsxDEV(Accord, { ...paragraph\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 28\n        }, this));\n        break;\n\n      case 'Subheading':\n        items.push( /*#__PURE__*/_jsxDEV(Subheading, { ...paragraph\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 28\n        }, this));\n        break;\n\n      case 'Info':\n        items.push( /*#__PURE__*/_jsxDEV(Info, { ...paragraph\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 28\n        }, this));\n        break;\n\n      case 'PDF':\n        items.push( /*#__PURE__*/_jsxDEV(Pdf, { ...paragraph\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 28\n        }, this));\n        break;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: items\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Paragraphs, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Paragraphs;\nParagraphs.propTypes = {\n  paragraphs: PropTypes.arrayOf(PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired\n  })).isRequired\n};\nexport default Paragraphs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paragraphs\");","map":{"version":3,"sources":["/Users/juhaylonen/futurice/myHelsinki/tyollisyys/react2/src/Paragraphs.js"],"names":["Grid","Container","PropTypes","Header","makeStyles","React","Button","Toolbar","Link","Accord","Subheading","Info","Pdf","useStyles","theme","toolbar","borderBottom","palette","divider","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","padding","spacing","flexShrink","Paragraphs","props","classes","paragraphs","console","log","items","map","paragraph","index","type","push","propTypes","arrayOf","shape","string","isRequired","title","text"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAY;AACrCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,YAAY,EAAG,aAAYF,KAAK,CAACG,OAAN,CAAcC,OAAQ;AAD5C,GAD4B;AAIrCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,IAAI,EAAE;AADI,GAJuB;AAOrCC,EAAAA,gBAAgB,EAAE;AACdC,IAAAA,cAAc,EAAE,eADF;AAEdC,IAAAA,SAAS,EAAE;AAFG,GAPmB;AAWrCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,OAAO,EAAEX,KAAK,CAACY,OAAN,CAAc,CAAd,CADA;AAETC,IAAAA,UAAU,EAAE;AAFH;AAXwB,CAAZ,CAAD,CAA5B;;AAiBA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAMC,OAAO,GAAGjB,SAAS,EAAzB;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAAiBF,KAAvB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,QAAMG,KAAK,GAAG,EAAd;AACAH,EAAAA,UAAU,CAACI,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAEjC,YAAOD,SAAS,CAACE,IAAjB;AACI,WAAK,WAAL;AACIJ,QAAAA,KAAK,CAACK,IAAN,eAAW,QAAC,MAAD,OAAwBH;AAAxB,WAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,gBAAX;AACA;;AACJ,WAAK,YAAL;AACIH,QAAAA,KAAK,CAACK,IAAN,eAAW,QAAC,UAAD,OAA4BH;AAA5B,WAAiBC,KAAjB;AAAA;AAAA;AAAA;AAAA,gBAAX;AACA;;AACJ,WAAK,MAAL;AACIH,QAAAA,KAAK,CAACK,IAAN,eAAW,QAAC,IAAD,OAAsBH;AAAtB,WAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,gBAAX;AACA;;AACJ,WAAK,KAAL;AACIH,QAAAA,KAAK,CAACK,IAAN,eAAW,QAAC,GAAD,OAAqBH;AAArB,WAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,gBAAX;AACA;AAZR;AAcH,GAhBD;AAiBA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA3BQN,U;UACWf,S;;;KADXe,U;AA6BTA,UAAU,CAACY,SAAX,GAAuB;AACnBT,EAAAA,UAAU,EAAE7B,SAAS,CAACuC,OAAV,CACRvC,SAAS,CAACwC,KAAV,CAAgB;AACZJ,IAAAA,IAAI,EAAEpC,SAAS,CAACyC,MAAV,CAAiBC,UADX;AAEZC,IAAAA,KAAK,EAAE3C,SAAS,CAACyC,MAAV,CAAiBC,UAFZ;AAGZE,IAAAA,IAAI,EAAE5C,SAAS,CAACyC,MAAV,CAAiBC;AAHX,GAAhB,CADQ,EAMVA;AAPiB,CAAvB;AAUA,eAAehB,UAAf","sourcesContent":["import Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Link from \"@material-ui/core/Link\";\nimport Accord from \"./Accord\";\nimport Subheading from \"./Subheading\";\nimport Info from \"./Info\";\nimport Pdf from \"./Pdf\";\n\nconst useStyles = makeStyles((theme) => ({\n    toolbar: {\n        borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    toolbarTitle: {\n        flex: 1,\n    },\n    toolbarSecondary: {\n        justifyContent: 'space-between',\n        overflowX: 'auto',\n    },\n    toolbarLink: {\n        padding: theme.spacing(1),\n        flexShrink: 0,\n    },\n}));\n\nfunction Paragraphs(props) {\n    const classes = useStyles();\n    const { paragraphs } = props;\n    console.log(paragraphs);\n    const items = [];\n    paragraphs.map((paragraph, index) => {\n\n        switch(paragraph.type) {\n            case 'Accordion':\n                items.push(<Accord key={index} {...paragraph}></Accord>);\n                break;\n            case 'Subheading':\n                items.push(<Subheading key={index} {...paragraph}></Subheading>);\n                break;\n            case 'Info':\n                items.push(<Info key={index} {...paragraph}></Info>);\n                break;\n            case 'PDF':\n                items.push(<Pdf key={index} {...paragraph}></Pdf>);\n                break;\n        }\n    });\n    return (\n        <React.Fragment>\n            {items}\n        </React.Fragment>\n    );\n}\n\nParagraphs.propTypes = {\n    paragraphs: PropTypes.arrayOf(\n        PropTypes.shape({\n            type: PropTypes.string.isRequired,\n            title: PropTypes.string.isRequired,\n            text: PropTypes.string.isRequired,\n        }),\n    ).isRequired,\n};\n\nexport default Paragraphs;"]},"metadata":{},"sourceType":"module"}