/// <reference types="react" />
import { SelectProps } from "./components/Select/index";
type FilterFunction<OptionType> = (options: OptionType[], search: string) => OptionType[];
type ComboboxProps<OptionType> = SelectProps<OptionType> & {
    /**
     * Prevents further propagation of the 'Escape' onKeyDown event when the menu is closed by pressing Esc.
     * Useful e.g. when the component is used inside a modal.
     */
    catchEscapeKey?: boolean;
    /**
     * If provided, this filter function will be used for filtering the
     * combobox suggestions. If this prop is not provided, the default
     * filter implementation is used. The default implementation assumes
     * that the `optionLabelField` prop points to a string value that it
     * can compare with the search value.
     */
    filter?: FilterFunction<OptionType>;
    /**
     * If `true`, displays a menu toggle button in the combobox.
     */
    showToggleButton?: boolean;
    /**
     * aria-label for the menu toggle button. The label for the combobox will be prepended to the given value.
     */
    toggleButtonAriaLabel: string;
};
declare const Combobox: {
    <OptionType>(props: ComboboxProps<OptionType>): JSX.Element;
    defaultProps: {
        multiselect: boolean;
    };
};
export { ComboboxProps, Combobox };
