/// <reference types="react" />
import React from 'react';
declare const useNotificationArea: (loadingTextVal: string, finishedTextVal: string) => void;
interface LoadingSpinnerCustomTheme {
    '--spinner-color'?: string;
    '--spinner-color-stage1'?: string;
    '--spinner-color-stage2'?: string;
    '--spinner-color-stage3'?: string;
}
type LoadingSpinnerProps = {
    /**
     * Additional class names for loading spinner.
     */
    className?: string;
    /**
     * If `true`, the multicolor variant is used.
     * @default false
     */
    multicolor?: boolean;
    /**
     * If `true`, the small variant is used.
     * @default false
     */
    small?: boolean;
    /**
     * Custom theme
     */
    theme?: LoadingSpinnerCustomTheme;
    /**
     * Text to show for screen readers when spinner is visible.
     * @default "Page is loading"
     */
    loadingText?: string;
    /**
     * Text to show for screen readers when spinner is removed.
     * @default "Page has finished loading"
     */
    loadingFinishedText?: string;
    /**
     * Value for aria-valuenow attribute. Required unless the loading status is indeterminate.
     */
    valuenow?: number;
} & React.HTMLProps<HTMLDivElement>;
declare const LoadingSpinner: ({ className, multicolor, small, theme, loadingText, loadingFinishedText, ...rest }: LoadingSpinnerProps) => JSX.Element;
export { useNotificationArea, LoadingSpinnerCustomTheme, LoadingSpinnerProps, LoadingSpinner };
