/// <reference types="react" />
import React from 'react';
type SelectedItemsProps<OptionType> = {
    /**
     * The index of the item that should be active and focused
     */
    activeIndex: number;
    /**
     * Additional class names to apply to the root element
     */
    className?: string;
    /**
     * Flag for whether the clear selections button should be displayed
     */
    clearable?: boolean;
    /**
     * The aria-label for the clear button
     */
    clearButtonAriaLabel?: string;
    /**
     * Dropdown ID
     */
    dropdownId: string;
    /**
     * Downshift selected item getter function
     */
    getSelectedItemProps: any;
    /**
     * Flag for whether selected items that horizontally don't fit the container should be hidden
     */
    hideItems: boolean;
    /**
     * Callback function fired when the clear button is pressed.
     */
    onClear: () => void;
    /**
     * Callback function fired when the when an item is removed
     */
    onRemove: (selectedItem: OptionType) => void;
    /**
     * Sets the data item field that represents the item label
     */
    optionLabelField: string;
    /**
     * The aria-label for the remove button
     */
    removeButtonAriaLabel: string;
    /**
     * Selected items
     */
    selectedItems: OptionType[];
    /**
     * Selected items container ref
     */
    selectedItemsContainerRef: React.MutableRefObject<HTMLDivElement>;
    /**
     * Label for selected items that is only visible to screen readers. Can be used to to give screen reader users additional information about the selected item
     */
    selectedItemSrLabel?: string;
    /**
     * Downshift setActiveIndex function
     */
    setActiveIndex: (index: number) => void;
    /**
     * Whether the dropdown toggle button is hidden
     */
    toggleButtonHidden?: boolean;
};
declare const SelectedItems: <OptionType>({ activeIndex, className, clearable, clearButtonAriaLabel, dropdownId, getSelectedItemProps, hideItems, onClear, onRemove, optionLabelField, removeButtonAriaLabel, selectedItems, selectedItemsContainerRef, selectedItemSrLabel, setActiveIndex, toggleButtonHidden, }: SelectedItemsProps<OptionType>) => JSX.Element;
export { SelectedItems };
